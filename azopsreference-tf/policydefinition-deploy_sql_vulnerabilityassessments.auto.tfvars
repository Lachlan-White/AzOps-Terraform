policyDefinition_deploy_sql_vulnerabilityassessments_policyrule = <<POLICYRULE
{
  "if": {
    "field": "type",
    "equals": "Microsoft.Sql/servers/databases"
  },
  "then": {
    "effect": "deployIfNotExists",
    "details": {
      "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
      "existencecondition": {
        "allof": [
          {
            "field": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.emails",
            "equals": "[parameters('vulnerabilityAssessmentsEmail')]"
          },
          {
            "field": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.isEnabled",
            "equals": true
          }
        ]
      },
      "deployment": {
        "properties": {
          "mode": "incremental",
          "template": {
            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentversion": "1.0.0.0",
            "parameters": {
              "location": {
                "type": "string"
              },
              "sqlservername": {
                "type": "string"
              },
              "sqlserverdatabasename": {
                "type": "string"
              },
              "vulnerabilityassessmentsemail": {
                "type": "string"
              },
              "vulnerabilityassessmentsstorageid": {
                "type": "string"
              }
            },
            "variables": {},
            "resources": [
              {
                "name": "[concat(parameters('sqlServerName'),'/',parameters('sqlServerDataBaseName'),'/default')]",
                "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
                "apiversion": "2017-03-01-preview",
                "properties": {
                  "storagecontainerpath": "[concat('https://', last( split(parameters('vulnerabilityAssessmentsStorageID') , '/') ) , '.blob.core.windows.net/vulneraabilitylogs')]",
                  "storageaccountaccesskey": "[listkeys(parameters('vulnerabilityAssessmentsStorageID'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]",
                  "recurringscans": {
                    "isenabled": true,
                    "emailsubscriptionadmins": false,
                    "emails": [
                      "[parameters('vulnerabilityAssessmentsEmail')]"
                    ]
                  }
                }
              }
            ],
            "outputs": {}
          },
          "parameters": {
            "location": {
              "value": "[field('location')]"
            },
            "sqlservername": {
              "value": "[first(split(field('fullname'),'/'))]"
            },
            "sqlserverdatabasename": {
              "value": "[field('name')]"
            },
            "vulnerabilityassessmentsemail": {
              "value": "[parameters('vulnerabilityAssessmentsEmail')]"
            },
            "vulnerabilityassessmentsstorageid": {
              "value": "[parameters('vulnerabilityAssessmentsStorageID')]"
            }
          }
        }
      },
      "roledefinitionids": [
        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
      ]
    }
  }
}
POLICYRULE

policyDefinition_deploy_sql_vulnerabilityassessments_parameters = <<PARAMETERS
{
  "vulnerabilityassessmentsemail": {
    "type": "String",
    "metadata": {
      "description": "The email address to send alerts",
      "displayname": "The email address to send alerts"
    }
  },
  "vulnerabilityassessmentsstorageid": {
    "type": "String",
    "metadata": {
      "description": "The storage account to store assessments",
      "displayname": "The storage account to store assessments"
    }
  }
}
PARAMETERS

